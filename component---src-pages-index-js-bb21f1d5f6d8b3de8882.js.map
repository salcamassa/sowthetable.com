{"version":3,"sources":["webpack:///./src/components/categoryCard/CategoryCard.module.css","webpack:///./src/components/layout/grid-container.js","webpack:///./src/components/categoryCard/categoryCard.js","webpack:///./src/pages/index.js"],"names":["module","exports","children","css","CategoryCard","title","className","styles","categoryCardContainer","categoryCard","categoryCardTitle","query","data","console","log","posts","recipes","edges","tags","gallery","map","post","key","node","id","to","fields","slug","fluid","frontmatter","featuredImage","childImageSharp","description"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,aAAe,2CAA2C,sBAAwB,oDAAoD,kBAAoB,kD,6QCE7J,cAAmB,IAAhBC,EAAe,EAAfA,SACd,OACI,mBACIC,IAAG,GAOFD,I,2ECMEE,EAbM,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAGjB,WAFA,CAEA,OAAKC,UAAWC,IAAOC,uBAE3B,mBAAKF,UAAWC,IAAOE,cACnB,oBAAMH,UAAWC,IAAOG,mBAAmB,sBAAKL,O,gQC2DvCM,GAzDE,sBAAe,IAAZC,EAAW,EAAXA,KAChBC,QAAQC,IAAIP,KACZM,QAAQC,IAAIF,GACZ,IAAMG,EAAQH,EAAKI,QAAQC,MACrBC,EAAON,EAAKM,KAGlB,OADAL,QAAQC,IAAI,OAAQI,GAIlB,YAAC,IAAD,KAGE,kBAAIf,IAAG,GAAP,cAEA,uBAASG,UAAWC,IAAOY,SACzB,YAAC,EAAD,KACE,YAAC,EAAD,CAAcd,MAAM,cACpB,YAAC,EAAD,CAAcA,MAAM,UACpB,YAAC,EAAD,CAAcA,MAAM,aAMxB,kBAAIF,IAAG,GAAP,kBAEA,uBAASG,UAAWC,IAAOY,SACzB,sBACGJ,EAAMK,KAAI,SAAAC,GAAI,OACb,YAAC,OAAD,CACEC,IAAKD,EAAKE,KAAKC,GACfC,GAAIJ,EAAKE,KAAKG,OAAOC,KACrBxB,IAAG,GAKH,sBACE,0BACE,YAAC,IAAD,CAAKA,IAAG,EACNyB,MAAOP,EAAKE,KAAKM,YAAYC,cAAcC,gBAAgBH,QAE7D,8BAAY,0BAAMP,EAAKE,KAAKM,YAAYxB,SAE1C,qBAAIgB,EAAKE,KAAKM,YAAYG,sBAYxB","file":"component---src-pages-index-js-bb21f1d5f6d8b3de8882.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"categoryCard\":\"CategoryCard-module--categoryCard--htRc2\",\"categoryCardContainer\":\"CategoryCard-module--categoryCardContainer--2Vpdh\",\"categoryCardTitle\":\"CategoryCard-module--categoryCardTitle--VvqRb\"};","import React from \"react\"\nimport { css } from \"@emotion/core\"\n\nexport default ({ children }) => {\n    return (\n        <div\n            css={css`\n            display: grid;\n            list-style: none;\n            grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));\n            grid-gap: 1rem;\n        `}\n        >\n            {children}\n        </div>\n    )\n}","import React from \"react\"\nimport { navigate } from \"gatsby\"\nimport styles from './CategoryCard.module.css'\nimport { Link, graphql } from \"gatsby\"\n\n\nconst CategoryCard = ({ title }) => (\n    // <Link to={`/recipes/${kebabCase(title)}/`}>\n                  \n    <div className={styles.categoryCardContainer}>\n\n<div className={styles.categoryCard}>\n    <span className={styles.categoryCardTitle}><h3>{title}</h3></span>\n</div>\n</div>\n//  </Link>\n\n);\n\nexport default CategoryCard\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { css } from \"@emotion/core\"\nimport { rhythm } from \"../utils/typography\"\nimport Layout from \"../components/layout/layout\"\nimport GridContainer from \"../components/layout/grid-container\"\nimport Img from \"gatsby-image\"\nimport styles from \"./index.module.css\"\nimport kebabCase from \"lodash/kebabCase\"\nimport CategoryCard from \"../components/categoryCard/categoryCard\"\nimport Breweries from \"../components/breweries\"\n// import Logo from \"../../static/logo.jpeg\";\n\n\nexport default ({ data }) => {\n  console.log(styles)\n  console.log(data)\n  const posts = data.recipes.edges;\n  const tags = data.tags;\n\n  console.log(\"tags\", tags);\n  return (\n    \n\n    <Layout>\n\n      {/* CATEGORY BOXES */}\n      <h1 css={css`text-align:center; margin-top:10%; margin-bottom:3rem`}>Categories</h1>\n\n      <section className={styles.gallery}>\n        <GridContainer>\n          <CategoryCard title=\"Breakfast\"></CategoryCard>\n          <CategoryCard title=\"Lunch\"></CategoryCard>\n          <CategoryCard title=\"Dinner\"></CategoryCard>\n        </GridContainer>\n      </section>\n\n\n      {/* Recent Recipes */}\n      <h1 css={css`text-align:center; margin-top:10%; `}>Recent Recipes</h1>\n      {/* <h4>{data.allMarkdownRemark.totalCount} Posts</h4> */}\n      <section className={styles.gallery}>\n        <ul>\n          {posts.map(post => (\n            <Link\n              key={post.node.id}\n              to={post.node.fields.slug}\n              css={css`\n                text-decoration: none;\n                color: inherit;\n              `}\n            >\n              <li>\n                <figure>\n                  <Img css={css`height:250px!important;`}\n                    fluid={post.node.frontmatter.featuredImage.childImageSharp.fluid}\n                  />\n                  <figcaption><h3> {post.node.frontmatter.title}</h3></figcaption>\n                </figure>\n                <p>{post.node.frontmatter.description}</p>\n                {/* <p>{post.node.frontmatter.tags}</p> */}\n              </li>\n            </Link>\n          ))}\n        </ul>\n      </section>\n    </Layout>\n  )\n}\n\n\nexport const query = graphql`\nquery {\n  recipes: allMarkdownRemark(sort: {order: DESC, fields: [frontmatter___date]}) {\n    totalCount\n    edges {\n      node {\n        id\n        excerpt(pruneLength: 250)\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          tags\n          description\n          featuredImage {\n            childImageSharp {\n              fluid {\n              ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  tags: allMarkdownRemark(limit: 2000) {\n    group(field: frontmatter___tags) {\n      fieldValue\n      totalCount\n    }\n  }\n  fileName: file(relativePath: { eq: \"./images/logo.jpeg\" }) {\n    childImageSharp {\n      fluid(maxWidth: 400, maxHeight: 250) {\n        ...GatsbyImageSharpFluid\n      }\n    }\n  }\n}\n`"],"sourceRoot":""}